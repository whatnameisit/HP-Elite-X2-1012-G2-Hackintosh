{
    External (_SB_.PCI0.LPCB.H_EC.CFSP, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.DIM0, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.DIM1, UnknownObj)
    External (_SB_.PCI0.LPCB.H_EC.ECRD, MethodObj)    // 1 Arguments
    External (_TZ_.TZ01._TMP, MethodObj)    // 0 Arguments
    External (ADBG, MethodObj)    // 1 Arguments
    External (DDRF, UnknownObj)
    External (ECON, IntObj)
    External (TSOD, IntObj)
    External (XMPB, UnknownObj)
    External (XSMI, UnknownObj)
    External (XTUB, UnknownObj)
    External (XTUS, UnknownObj)


    0024: A0 48 0B 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30  // .H...\/._SB_PCI0
    0034: 4C 50 43 42 48 5F 45 43 44 49 4D 30 00 00 15 5C  // LPCBH_ECDIM0...\
    0044: 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42 48 5F  // /._SB_PCI0LPCBH_
    0054: 45 43 44 49 4D 31 00 00 15 5C 2F 03 5F 54 5A 5F  // ECDIM1...\/._TZ_
    0064: 54 5A 30 31 5F 54 4D 50 08 00 15 5C 2F 05 5F 53  // TZ01_TMP...\/._S
    0074: 42 5F 50 43 49 30 4C 50 43 42 48 5F 45 43 43 46  // B_PCI0LPCBH_ECCF
    0084: 53 50 00 00 15 5C 2F 05 5F 53 42 5F 50 43 49 30  // SP...\/._SB_PCI0
    0094: 4C 50 43 42 48 5F 45 43 45 43 52 44 08 01 15 5C  // LPCBH_ECECRD...\
    00A4: 54 53 4F 44 01 00 15 5C 45 43 4F 4E 01 00 15 58  // TSOD...\ECON...X
    00B4: 54 55 42 00 00 15 58 54 55 53 00 00 15 58 4D 50  // TUB...XTUS...XMP
    00C4: 42 00 00 15 44 44 52 46 00 00 15 58 53 4D 49 00  // B...DDRF...XSMI.
    00D4: 00 15 5C 41 44 42 47 08 01                       // ..\ADBG..

    Scope (\_SB)
    {

    00DD: 10 48 4E 5C 5F 53 42 5F                          // .HN\_SB_

        Device (PTMD)
        {

    00E5: 5B 82 4F 4D 50 54 4D 44                          // [.OMPTMD

            Name (_HID, EisaId ("INT3394") /* ACPI System Fan */)  // _HID: Hardware ID

    00ED: 08 5F 48 49 44 0C 25 D4 33 94                    // ._HID.%.3.

            Name (_CID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _CID: Compatible ID

    00F7: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

            Name (IVER, 0x00010000)

    0101: 08 49 56 45 52 0C 00 00 01 00                    // .IVER.....

            Name (SIZE, 0x055C)

    010B: 08 53 49 5A 45 0B 5C 05                          // .SIZE.\.

            Method (GACI, 0, NotSerialized)
            {

    0113: 14 43 0A 47 41 43 49 00                          // .C.GACI.

                Name (RPKG, 
    011B: 08 52 50 4B 47                                   // .RPKG

Package (0x02){})
                RPKG [Zero] = Zero

    0120: 12 02 02 70 00 88 52 50 4B 47 00 00              // ...p..RPKG..

                If (
    012C: A0 4B 06 92                                      // .K..

(XTUB != Zero))
                {
                    ADBG ("XTUB")
                    ADBG (XTUB)
                    ADBG ("XTUS")
                    ADBG (XTUS)

    0130: 93 58 54 55 42 00 41 44 42 47 0D 58 54 55 42 00  // .XTUB.ADBG.XTUB.
    0140: 41 44 42 47 58 54 55 42 41 44 42 47 0D 58 54 55  // ADBGXTUBADBG.XTU
    0150: 53 00 41 44 42 47 58 54 55 53                    // S.ADBGXTUS

                    OperationRegion (XNVS, SystemMemory, XTUB, SIZE)

    015A: 5B 80 58 4E 56 53 00 58 54 55 42 53 49 5A 45     // [.XNVS.XTUBSIZE

                    Field (XNVS, ByteAcc, NoLock, Preserve)
                    {
                        XBUF,   10976
                    }


    0169: 5B 81 0D 58 4E 56 53 01 58 42 55 46 80 AE 02     // [..XNVS.XBUF...

                    Name (TEMP, 
    0178: 08 54 45 4D 50                                   // .TEMP

Buffer (XTUS){})
                    TEMP = XBUF /* \_SB_.PTMD.GACI.XBUF */

    017D: 11 05 58 54 55 53 70 58 42 55 46 54 45 4D 50     // ..XTUSpXBUFTEMP

                    RPKG [One] = TEMP /* \_SB_.PTMD.GACI.TEMP */
                }

    018C: 70 54 45 4D 50 88 52 50 4B 47 01 00              // pTEMP.RPKG..

                Else
                {
                    ADBG ("XTUB ZERO")

    0198: A1 19 41 44 42 47 0D 58 54 55 42 20 5A 45 52 4F  // ..ADBG.XTUB ZERO
    01A8: 00                                               // .

                    RPKG [One] = Zero
                }


    01A9: 70 00 88 52 50 4B 47 01 00                       // p..RPKG..

                Return (RPKG) /* \_SB_.PTMD.GACI.RPKG */
            }


    01B2: A4 52 50 4B 47                                   // .RPKG

            Method (GDSV, 1, Serialized)
            {

    01B7: 14 45 23 47 44 53 56 09                          // .E#GDSV.

                If ((Arg0 == 0x05))
                {

    01BF: A0 49 07 93 68 0A 05                             // .I..h..

                    Return (
    01C6: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    01C7: 12 41 07 02 00                                   // .A...

                        Buffer (0x68)
                        {
                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x4C, 0x04, 0x00, 0x00,  // ....L...
                            /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x4C, 0x04, 0x00, 0x00,  // ....L...
                            /* 0010 */  0x02, 0x00, 0x00, 0x00, 0x7E, 0x04, 0x00, 0x00,  // ....~...
                            /* 0018 */  0x03, 0x00, 0x00, 0x00, 0xB0, 0x04, 0x00, 0x00,  // ........
                            /* 0020 */  0x04, 0x00, 0x00, 0x00, 0xE2, 0x04, 0x00, 0x00,  // ........
                            /* 0028 */  0x05, 0x00, 0x00, 0x00, 0x14, 0x05, 0x00, 0x00,  // ........
                            /* 0030 */  0x06, 0x00, 0x00, 0x00, 0x46, 0x05, 0x00, 0x00,  // ....F...
                            /* 0038 */  0x07, 0x00, 0x00, 0x00, 0x78, 0x05, 0x00, 0x00,  // ....x...
                            /* 0040 */  0x08, 0x00, 0x00, 0x00, 0xAA, 0x05, 0x00, 0x00,  // ........
                            /* 0048 */  0x09, 0x00, 0x00, 0x00, 0xDC, 0x05, 0x00, 0x00,  // ........
                            /* 0050 */  0x0A, 0x00, 0x00, 0x00, 0x0E, 0x06, 0x00, 0x00,  // ........
                            /* 0058 */  0x0B, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00,  // ....@...
                            /* 0060 */  0x0C, 0x00, 0x00, 0x00, 0x72, 0x06, 0x00, 0x00   // ....r...
                        }
                    })
                }


    01CC: 11 4C 06 0A 68 00 00 00 00 4C 04 00 00 01 00 00  // .L..h....L......
    01DC: 00 4C 04 00 00 02 00 00 00 7E 04 00 00 03 00 00  // .L.......~......
    01EC: 00 B0 04 00 00 04 00 00 00 E2 04 00 00 05 00 00  // ................
    01FC: 00 14 05 00 00 06 00 00 00 46 05 00 00 07 00 00  // .........F......
    020C: 00 78 05 00 00 08 00 00 00 AA 05 00 00 09 00 00  // .x..............
    021C: 00 DC 05 00 00 0A 00 00 00 0E 06 00 00 0B 00 00  // ................
    022C: 00 40 06 00 00 0C 00 00 00 72 06 00 00           // .@.......r...

                If ((Arg0 == 0x13))
                {
                    ADBG ("DDR MULT")

    0239: A0 45 11 93 68 0A 13 41 44 42 47 0D 44 44 52 20  // .E..h..ADBG.DDR 
    0249: 4D 55 4C 54 00                                   // MULT.

                    If ((DDRF == One))
                    {
                        ADBG ("DDR 1")

    024E: A0 4E 06 93 44 44 52 46 01 41 44 42 47 0D 44 44  // .N..DDRF.ADBG.DD
    025E: 52 20 31 00                                      // R 1.

                        Return (
    0262: A4                                               // .

Package (0x02)
                        {
                            Zero, 

    0263: 12 49 05 02 00                                   // .I...

                            Buffer (0x50)
                            {
                                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                /* 0008 */  0x04, 0x00, 0x00, 0x00, 0x2B, 0x04, 0x00, 0x00,  // ....+...
                                /* 0010 */  0x05, 0x00, 0x00, 0x00, 0x35, 0x05, 0x00, 0x00,  // ....5...
                                /* 0018 */  0x06, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00,  // ....@...
                                /* 0020 */  0x07, 0x00, 0x00, 0x00, 0x4B, 0x07, 0x00, 0x00,  // ....K...
                                /* 0028 */  0x08, 0x00, 0x00, 0x00, 0x55, 0x08, 0x00, 0x00,  // ....U...
                                /* 0030 */  0x09, 0x00, 0x00, 0x00, 0x60, 0x09, 0x00, 0x00,  // ....`...
                                /* 0038 */  0x0A, 0x00, 0x00, 0x00, 0x6B, 0x0A, 0x00, 0x00,  // ....k...
                                /* 0040 */  0x0B, 0x00, 0x00, 0x00, 0x75, 0x0B, 0x00, 0x00,  // ....u...
                                /* 0048 */  0x0C, 0x00, 0x00, 0x00, 0x80, 0x0C, 0x00, 0x00   // ........
                            }
                        })
                    }

    0268: 11 44 05 0A 50 00 00 00 00 00 00 00 00 04 00 00  // .D..P...........
    0278: 00 2B 04 00 00 05 00 00 00 35 05 00 00 06 00 00  // .+.......5......
    0288: 00 40 06 00 00 07 00 00 00 4B 07 00 00 08 00 00  // .@.......K......
    0298: 00 55 08 00 00 09 00 00 00 60 09 00 00 0A 00 00  // .U.......`......
    02A8: 00 6B 0A 00 00 0B 00 00 00 75 0B 00 00 0C 00 00  // .k.......u......
    02B8: 00 80 0C 00 00                                   // .....

                    Else
                    {
                        ADBG ("DDR ELSE")

    02BD: A1 43 08 41 44 42 47 0D 44 44 52 20 45 4C 53 45  // .C.ADBG.DDR ELSE
    02CD: 00                                               // .

                        Return (
    02CE: A4                                               // .

Package (0x02)
                        {
                            Zero, 

    02CF: 12 41 07 02 00                                   // .A...

                            Buffer (0x68)
                            {
                                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                                /* 0008 */  0x05, 0x00, 0x00, 0x00, 0x2B, 0x04, 0x00, 0x00,  // ....+...
                                /* 0010 */  0x06, 0x00, 0x00, 0x00, 0xB0, 0x04, 0x00, 0x00,  // ........
                                /* 0018 */  0x07, 0x00, 0x00, 0x00, 0x78, 0x05, 0x00, 0x00,  // ....x...
                                /* 0020 */  0x08, 0x00, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00,  // ....@...
                                /* 0028 */  0x09, 0x00, 0x00, 0x00, 0x08, 0x07, 0x00, 0x00,  // ........
                                /* 0030 */  0x0A, 0x00, 0x00, 0x00, 0xD0, 0x07, 0x00, 0x00,  // ........
                                /* 0038 */  0x0B, 0x00, 0x00, 0x00, 0x98, 0x08, 0x00, 0x00,  // ........
                                /* 0040 */  0x0C, 0x00, 0x00, 0x00, 0x60, 0x09, 0x00, 0x00,  // ....`...
                                /* 0048 */  0x0D, 0x00, 0x00, 0x00, 0x28, 0x0A, 0x00, 0x00,  // ....(...
                                /* 0050 */  0x0E, 0x00, 0x00, 0x00, 0xF0, 0x0A, 0x00, 0x00,  // ........
                                /* 0058 */  0x0F, 0x00, 0x00, 0x00, 0xB8, 0x0B, 0x00, 0x00,  // ........
                                /* 0060 */  0x10, 0x00, 0x00, 0x00, 0x80, 0x0C, 0x00, 0x00   // ........
                            }
                        })
                    }

                    ADBG ("DDR EXIT")
                }


    02D4: 11 4C 06 0A 68 00 00 00 00 00 00 00 00 05 00 00  // .L..h...........
    02E4: 00 2B 04 00 00 06 00 00 00 B0 04 00 00 07 00 00  // .+..............
    02F4: 00 78 05 00 00 08 00 00 00 40 06 00 00 09 00 00  // .x.......@......
    0304: 00 08 07 00 00 0A 00 00 00 D0 07 00 00 0B 00 00  // ................
    0314: 00 98 08 00 00 0C 00 00 00 60 09 00 00 0D 00 00  // .........`......
    0324: 00 28 0A 00 00 0E 00 00 00 F0 0A 00 00 0F 00 00  // .(..............
    0334: 00 B8 0B 00 00 10 00 00 00 80 0C 00 00 41 44 42  // .............ADB
    0344: 47 0D 44 44 52 20 45 58 49 54 00                 // G.DDR EXIT.

                If ((Arg0 == 0x0B))
                {

    034F: A0 41 07 93 68 0A 0B                             // .A..h..

                    Return (
    0356: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    0357: 12 49 06 02 00                                   // .I...

                        Buffer (0x60)
                        {
                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                            /* 0008 */  0x05, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00,  // ........
                            /* 0010 */  0x06, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00,  // ........
                            /* 0018 */  0x07, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00,  // ........
                            /* 0020 */  0x08, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00,  // ........
                            /* 0028 */  0x0A, 0x00, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00,  // ........
                            /* 0030 */  0x0C, 0x00, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00,  // ........
                            /* 0038 */  0x0E, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x00, 0x00,  // ........
                            /* 0040 */  0x10, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,  // ........
                            /* 0048 */  0x12, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00,  // ........
                            /* 0050 */  0x14, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00,  // ........
                            /* 0058 */  0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00   // ........
                        }
                    })
                }


    035C: 11 44 06 0A 60 00 00 00 00 00 00 00 00 05 00 00  // .D..`...........
    036C: 00 05 00 00 00 06 00 00 00 06 00 00 00 07 00 00  // ................
    037C: 00 07 00 00 00 08 00 00 00 08 00 00 00 0A 00 00  // ................
    038C: 00 0A 00 00 00 0C 00 00 00 0C 00 00 00 0E 00 00  // ................
    039C: 00 0E 00 00 00 10 00 00 00 10 00 00 00 12 00 00  // ................
    03AC: 00 12 00 00 00 14 00 00 00 14 00 00 00 18 00 00  // ................
    03BC: 00 18 00 00 00                                   // .....

                If ((Arg0 == 0x49))
                {

    03C1: A0 26 93 68 0A 49                                // .&.h.I

                    Return (
    03C7: A4                                               // .

Package (0x02)
                    {
                        Zero, 

    03C8: 12 1F 02 00                                      // ....

                        Buffer (0x18)
                        {
                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ........
                            /* 0008 */  0x01, 0x00, 0x00, 0x00, 0x85, 0x00, 0x00, 0x00,  // ........
                            /* 0010 */  0x02, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00   // ....d...
                        }
                    })
                }


    03CC: 11 1B 0A 18 00 00 00 00 00 00 00 00 01 00 00 00  // ................
    03DC: 85 00 00 00 02 00 00 00 64 00 00 00              // ........d...

                Return (
    03E8: A4                                               // .

Package (0x01)
                {
                    One
                })
            }


    03E9: 12 03 01 01                                      // ....

            Method (GXDV, 1, Serialized)
            {

    03ED: 14 48 08 47 58 44 56 09                          // .H.GXDV.

                If (
    03F5: A0 4B 07 92                                      // .K..

(XMPB != Zero))
                {

    03F9: 93 58 4D 50 42 00                                // .XMPB.

                    OperationRegion (XMPN, SystemMemory, XMPB, SIZE)

    03FF: 5B 80 58 4D 50 4E 00 58 4D 50 42 53 49 5A 45     // [.XMPN.XMPBSIZE

                    Field (XMPN, ByteAcc, NoLock, Preserve)
                    {
                        XMP1,   576, 
                        XMP2,   576
                    }


    040E: 5B 81 12 58 4D 50 4E 01 58 4D 50 31 40 24 58 4D  // [..XMPN.XMP1@$XM
    041E: 50 32 40 24                                      // P2@$

                    If ((Arg0 == One))
                    {

    0422: A0 26 93 68 01                                   // .&.h.

                        Name (XP_1, 
    0427: 08 58 50 5F 31                                   // .XP_1

Package (0x02){})
                        XP_1 [Zero] = Zero
                        XP_1 [One] = XMP1 /* \_SB_.PTMD.GXDV.XMP1 */

    042C: 12 02 02 70 00 88 58 50 5F 31 00 00 70 58 4D 50  // ...p..XP_1..pXMP
    043C: 31 88 58 50 5F 31 01 00                          // 1.XP_1..

                        Return (XP_1) /* \_SB_.PTMD.GXDV.XP_1 */
                    }


    0444: A4 58 50 5F 31                                   // .XP_1

                    If ((Arg0 == 0x02))
                    {

    0449: A0 27 93 68 0A 02                                // .'.h..

                        Name (XP_2, 
    044F: 08 58 50 5F 32                                   // .XP_2

Package (0x02){})
                        XP_2 [Zero] = Zero
                        XP_2 [One] = XMP2 /* \_SB_.PTMD.GXDV.XMP2 */

    0454: 12 02 02 70 00 88 58 50 5F 32 00 00 70 58 4D 50  // ...p..XP_2..pXMP
    0464: 32 88 58 50 5F 32 01 00                          // 2.XP_2..

                        Return (XP_2) /* \_SB_.PTMD.GXDV.XP_2 */
                    }
                }


    046C: A4 58 50 5F 32                                   // .XP_2

                Return (
    0471: A4                                               // .

Package (0x01)
                {
                    One
                })
            }


    0472: 12 03 01 01                                      // ....

            Method (GSCV, 0, NotSerialized)
            {

    0476: 14 0C 47 53 43 56 00                             // ..GSCV.

                Return (
    047D: A4                                               // .

Package (0x01)
                {
                    0x72
                })
            }


    047E: 12 04 01 0A 72                                   // ....r

            Method (GSCB, 0, NotSerialized)
            {

    0483: 14 0B 47 53 43 42 00                             // ..GSCB.

                Return (XSMI) /* External reference */
            }


    048A: A4 58 53 4D 49                                   // .XSMI

            Method (CDRD, 1, Serialized)
            {

    048F: 14 0B 43 44 52 44 09                             // ..CDRD.

                Return (
    0496: A4                                               // .

Package (0x01)
                {
                    One
                })
            }


    0497: 12 03 01 01                                      // ....

            Method (CDWR, 2, Serialized)
            {

    049B: 14 08 43 44 57 52 0A                             // ..CDWR.

                Return (One)
            }


    04A2: A4 01                                            // ..

            Name (RPMV, 
    04A4: 08 52 50 4D 56                                   // .RPMV

Package (0x04)
            {
                One, 
                0x07, 
                Zero, 
                Zero
            })

    04A9: 12 07 04 01 0A 07 00 00                          // ........

            Name (TMP1, 
    04B1: 08 54 4D 50 31                                   // .TMP1

Package (0x0C)
            {
                One, 
                0x02, 
                Zero, 
                Zero, 
                0x05, 
                0x04, 
                Zero, 
                Zero, 
                0x06, 
                0x05, 
                Zero, 
                Zero
            })

    04B6: 12 13 0C 01 0A 02 00 00 0A 05 0A 04 00 00 0A 06  // ................
    04C6: 0A 05 00 00                                      // ....

            Name (TMP2, 
    04CA: 08 54 4D 50 32                                   // .TMP2

Package (0x08)
            {
                One, 
                0x02, 
                Zero, 
                Zero, 
                0x05, 
                0x04, 
                Zero, 
                Zero
            })

    04CF: 12 0D 08 01 0A 02 00 00 0A 05 0A 04 00 00        // ..............

            Name (TMP3, 
    04DD: 08 54 4D 50 33                                   // .TMP3

Package (0x04)
            {
                One, 
                0x02, 
                Zero, 
                Zero
            })

    04E2: 12 07 04 01 0A 02 00 00                          // ........

            Method (TSDD, 0, NotSerialized)
            {

    04EA: 14 4B 07 54 53 44 44 00                          // .K.TSDD.

                If ((XTUS == Zero))
                {

    04F2: A0 09 93 58 54 55 53 00                          // ...XTUS.

                    Return (Zero)
                }


    04FA: A4 00                                            // ..

                If (\ECON)
                {

    04FC: A0 4A 04 5C 45 43 4F 4E                          // .J.\ECON

                    If (\TSOD)
                    {
                        TMP1 [0x02] = \_TZ.TZ01._TMP ()

    0504: A0 23 5C 54 53 4F 44 70 5C 2F 03 5F 54 5A 5F 54  // .#\TSODp\/._TZ_T
    0514: 5A 30 31 5F 54 4D 50 88 54 4D 50 31 0A 02 00     // Z01_TMP.TMP1...

                        Return (TMP1) /* \_SB_.PTMD.TMP1 */
                    }

    0523: A4 54 4D 50 31                                   // .TMP1

                    Else
                    {
                        TMP2 [0x02] = \_TZ.TZ01._TMP ()

    0528: A1 1E 70 5C 2F 03 5F 54 5A 5F 54 5A 30 31 5F 54  // ..p\/._TZ_TZ01_T
    0538: 4D 50 88 54 4D 50 32 0A 02 00                    // MP.TMP2...

                        Return (TMP2) /* \_SB_.PTMD.TMP2 */
                    }
                }

    0542: A4 54 4D 50 32                                   // .TMP2

                Else
                {
                    TMP3 [0x02] = \_TZ.TZ01._TMP ()

    0547: A1 1E 70 5C 2F 03 5F 54 5A 5F 54 5A 30 31 5F 54  // ..p\/._TZ_TZ01_T
    0557: 4D 50 88 54 4D 50 33 0A 02 00                    // MP.TMP3...

                    Return (TMP3) /* \_SB_.PTMD.TMP3 */
                }
            }


    0561: A4 54 4D 50 33                                   // .TMP3

            Method (FSDD, 0, NotSerialized)
            {

    0566: 14 45 05 46 53 44 44 00                          // .E.FSDD.

                If ((XTUS == Zero))
                {

    056E: A0 09 93 58 54 55 53 00                          // ...XTUS.

                    Return (Zero)
                }


    0576: A4 00                                            // ..

                If (\ECON)
                {

    0578: A0 3E 5C 45 43 4F 4E                             // .>\ECON

                    RPMV [0x02] = \_SB.PCI0.LPCB.H_EC.ECRD (
    057F: 70 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // p\/._SB_PCI0LPCB
    058F: 48 5F 45 43 45 43 52 44                          // H_ECECRD

RefOf (\_SB.PCI0.LPCB.H_EC.CFSP))
                }


    0597: 71 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // q\/._SB_PCI0LPCB
    05A7: 48 5F 45 43 43 46 53 50 88 52 50 4D 56 0A 02 00  // H_ECCFSP.RPMV...

                Return (RPMV) /* \_SB_.PTMD.RPMV */
            }


    05B7: A4 52 50 4D 56                                   // .RPMV

            Method (SDSP, 0, NotSerialized)
            {

    05BC: 14 09 53 44 53 50 00                             // ..SDSP.

                Return (0x0A)
            }
        }
    }
}



Table Header:
Table Body (Length 0x5C6)
